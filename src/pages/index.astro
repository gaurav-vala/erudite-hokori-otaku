---
import BlogCard from '@/components/BlogCard.astro'
import Container from '@/components/Container.astro'
import Link from '@/components/Link.astro'
import { badgeVariants } from '@/components/ui/badge'
import { buttonVariants } from '@/components/ui/button'
import { Card, CardContent, CardHeader, CardTitle } from '@/components/ui/card'
import { SITE } from '@/consts'
import Layout from '@/layouts/Layout.astro'
import { Icon } from 'astro-icon/components'
import { getCollection } from 'astro:content'
import { ChevronRight } from 'lucide-react'

const blog = (await getCollection('blog'))
  .filter((post: any) => !post.data.draft)
  .sort((a: any, b: any) => b.data.date.valueOf() - a.data.date.valueOf())
  .slice(0, SITE.featuredPostCount)

const tagCounts = blog.reduce((acc: any, post: any) => {
  post.data.tags?.forEach((tag: any) => {
    acc.set(tag, (acc.get(tag) || 0) + 1)
  })
  return acc
}, new Map())

const tags = [...tagCounts.keys()].sort((a, b) => {
  const countDiff = tagCounts.get(b)! - tagCounts.get(a)!
  return countDiff !== 0 ? countDiff : a.localeCompare(b)
})

const mangaPosts = blog.filter((post: any) => post.data.tags?.includes('manga'))
const animePosts = blog.filter((post: any) => post.data.tags?.includes('anime'))
---

<Layout
  title="Home"
  description={SITE.description}
  image="/static/1200x630.png"
>
  <Container class="flex flex-col gap-y-6">
    <section>
      <Card>
        <CardHeader>
          <CardTitle className="font-instument text-3xl"
            >Hokori Otaku Collections</CardTitle
          >
        </CardHeader>
        <CardContent>
          <p class="mb-2 text-lg tracking-tight">
            Welcome to my world. I’m passionate about anime, manga, movies,
            music, and books. I love all kinds of pop culture and share my
            interests on Instagram. Join me if you’re interested!
          </p>
        </CardContent>
      </Card>
    </section>
    <section class="flex flex-col gap-y-4">
      <h2 class="text-2xl font-bold">Latest posts</h2>
      <ul class="not-prose flex flex-col gap-y-4">
        {
          blog.map((post: any) => (
            <li>
              <BlogCard entry={post} />
            </li>
          ))
        }
      </ul>
      <div class="flex justify-center">
        <Link
          href="/blog"
          class={buttonVariants({ variant: 'ghost' }) + ' group'}
        >
          See all posts <span
            class="ml-1.5 transition-transform group-hover:translate-x-1"
            >&rarr;</span
          >
        </Link>
      </div>
    </section>
    <section class="flex flex-col gap-y-4">
      <div class="flex items-center justify-between">
        <h2 class="text-2xl font-bold">Anime Posts</h2>
        <a class="flex items-center hover:underline" href="/tags/anime"
          >See All <ChevronRight size={18} /></a
        >
      </div>
      {
        animePosts.length > 0 ? (
          <ul class="not-prose flex flex-col gap-y-4">
            {animePosts.map((post: any) => (
              <li>
                <BlogCard entry={post} />
              </li>
            ))}
          </ul>
        ) : (
          <p>No posts available in manga tag yet.</p>
        )
      }
    </section>
    <section class="flex flex-col gap-y-4">
      <div class="flex items-center justify-between">
        <h2 class="text-2xl font-bold">Manga Posts</h2>
        <a class="flex items-center hover:underline" href="/tags/manga"
          >See All <ChevronRight size={18} /></a
        >
      </div>
      {
        mangaPosts.length > 0 ? (
          <ul class="not-prose flex flex-col gap-y-4">
            {mangaPosts.map((post: any) => (
              <li>
                <BlogCard entry={post} />
              </li>
            ))}
          </ul>
        ) : (
          <p>No posts available in manga tag yet.</p>
        )
      }
    </section>
    <section class="flex flex-col gap-y-4">
      <h2 class="text-2xl font-bold">Posts by Tags</h2>
      <div class="flex flex-wrap gap-2">
        {
          tags.map((tag) => (
            <a
              href={`/tags/${tag}`}
              class={badgeVariants({ variant: 'secondary' })}
            >
              <Icon name="lucide:hash" class="size-3 -translate-x-0.5" />
              {tag}
            </a>
          ))
        }
      </div>
    </section>
  </Container>
</Layout>
